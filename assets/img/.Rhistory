bb<-c(rep(c(2:10,10,11,10,10),4))
ma<-combn(bb,2)
table(apply(ma,2,sum))
bb<-c(rep(c(1:10,10,10,10),4))
ma<-combn(bb,2)
table(apply(ma,2,sum))
2/25
1-(2/25)
8/50
1-8/50
1-(12/50)
ma[,1:10]
bb<-c(rep(c(1:10,10,10,10),4))
ma<-combn(bb,2)
table(apply(ma,2,sum))
bb<-c(rep(c(2:10,11,10,10),4))
ma<-combn(bb,2)
table(apply(ma,2,sum))
bb<-c(rep(c(2:10,11,10,10),4))
ma<-combn(bb,2)
sample(2,choose(52,2))
sample(2,1:choose(52,2))
sample(2,1:choose(52,2))
sample(2,1:choose(52,2))
?sample(2,1:choose(52,2))
sample(1:choose(52,2),2)
oo<-sample(1:choose(52,2),2)
ma[,oo]
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(plotly)
library(gapminder)
library(xlsx)
bd<-read.xlsx("https://arufoundation.github.io/unicef-lb/3ddcaeb23d887c68d9f86b062cf0668fed45b87f/indexRes_v1.xlsx",1)
library(xlsx)
bd<-read.xlsx("https://arufoundation.github.io/unicef-lb/3ddcaeb23d887c68d9f86b062cf0668fed45b87f/indexRes_v1.xlsx",1)
https://arufoundation.github.io/unicef-lb/3ddcaeb23d887c68d9f86b062cf0668fed45b87f/indexRes_v1.xlsx
"https://arufoundation.github.io/unicef-lb/3ddcaeb23d887c68d9f86b062cf0668fed45b87f/indexRes_v1.xlsx"
load("https://arufoundation.github.io/unicef-lb/3ddcaeb23d887c68d9f86b062cf0668fed45b87f/indexRes_v1.xlsx")
read.xlsx("https://arufoundation.github.io/unicef-lb/3ddcaeb23d887c68d9f86b062cf0668fed45b87f/indexRes_v1.xlsx")
read.xlsx("https://arufoundation.github.io/unicef-lb/3ddcaeb23d887c68d9f86b062cf0668fed45b87f/indexRes_v1.xlsx",1)
library(xlsx)
setwd("/Users/iMac6/Desktop/_ARU2018/11_lbunicef")
bd<-read.xlsx("indexRes_v1.xlsx",1)
bd<-read.xlsx("indexRes_v1.xlsx",1)
plot(0,type="n",xlim=c(0.5,5),ylim=c(1,39),axes=F,xlab="Etapas",ylab="Indicadores")
grid(5, 37, lwd = 1)
text(0.5,1:37,bd$id,pos=4,col="blue")
axis(1,1:5,c("Planificación","Recolección","Validación","Procesamiento","Informe Final"))
colUN<-list()
for(i in 1:5){
colUN[[i]]<-rep("red",37)
colUN[[i]][bd[,i+1]==-1]<-"darkred"
colUN[[i]][bd[,i+1]==0]<-"yellow2"
colUN[[i]][bd[,i+1]==1]<-"darkgreen"
points(rep(i,37),1:37,cex=2,col=colUN[[i]],pch=15)
}
legend("top",col=c("darkred","yellow2","darkgreen"),legend = c("En Demora", "En Proceso","Concluido"),pch=15,horiz = T)
bd<-read.xlsx("indexRes_v1.xlsx",1)
plot(0,type="n",xlim=c(0.5,5),ylim=c(1,39),axes=F,xlab="Etapas",ylab="Indicadores")
grid(5, 37, lwd = 1)
plot(0,type="n",xlim=c(0.5,5),ylim=c(1,39),axes=F,xlab="Etapas",ylab="Indicadores")
bd<-read.xlsx("indexRes_v1.xlsx",1)
plot(0,type="n",xlim=c(0.5,5),ylim=c(1,39),axes=F,xlab="Etapas",ylab="Indicadores")
grid(5, 37, lwd = 1)
text(0.5,1:37,bd$id,pos=4,col="blue")
axis(1,1:5,c("Planificación","Recolección","Validación","Procesamiento","Informe Final"))
colUN<-list()
for(i in 1:5){
colUN[[i]]<-rep("red",37)
colUN[[i]][bd[,i+1]==-1]<-"darkred"
colUN[[i]][bd[,i+1]==0]<-"yellow2"
colUN[[i]][bd[,i+1]==1]<-"darkgreen"
points(rep(i,37),1:37,cex=2,col=colUN[[i]],pch=15)
}
legend("top",col=c("darkred","yellow2","darkgreen"),legend = c("En Demora", "En Proceso","Concluido"),pch=15,horiz = T)
legend("bottom",col=c("darkred","yellow2","darkgreen"),legend = c("En Demora", "En Proceso","Concluido"),pch=15,horiz = T)
legend("botton",col=c("darkred","yellow2","darkgreen"),legend = c("En Demora", "En Proceso","Concluido"),pch=15,horiz = T)
legend("bottom",col=c("darkred","yellow2","darkgreen"),legend = c("En Demora", "En Proceso","Concluido"),pch=15,horiz = T)
#####
install.packages("googleLanguageR")
library(googleLanguageR)
library(googleLanguageR)
## Not run:
test_audio <- system.file("woman1_wb.wav", package = "googleLanguageR")
result <- gl_speech(test_audio)
result <- gl_speech(test_audio)
result$transcript
result$timings
result2 <- gl_speech(test_audio, maxAlternatives = 2L)
result2$transcript
result_brit <- gl_speech(test_audio, languageCode = "en-GB")
## make an asynchronous API request (mandatory for sound files over 60 seconds)
asynch <- gl_speech(test_audio, asynch = TRUE)
## Send to gl_speech_op() for status or finished result
gl_speech_op(asynch)
## Upload to GCS bucket for long files > 60 seconds
test_gcs <- "gs://mark-edmondson-public-files/googleLanguageR/a-dream-mono.wav"
gcs <- gl_speech(test_gcs, sampleRateHertz = 44100L, asynch = TRUE)
gl_speech_op(gcs)
## Not run:
test_audio <- system.file("woman1_wb.wav", package = "googleLanguageR")
result <- gl_speech(test_audio)
gl_speech()
?gl_speech()
library(xtable)
xtable(matrix(1:100,10,10))
xtable(matrix(1:100,10,10),row.names=F)
xtable(matrix(1:100,10,10),row.names=F)
?xtable(matrix(1:100,10,10),row.names=F)
print(xtable(matrix(1:100,10,10)),row.names=F)
print(xtable(matrix(1:100,10,10)),include.rownames = =F)
print(xtable(matrix(1:100,10,10)),include.rownames =F)
print(xtable(matrix(1:100,10,10)),include.rownames =F)
install.packages("reporttools")
library(reporttools)
library(help=reporttools)
?tableNominal
data(CO2)
vars <- CO2[, 1:2]
group <- CO2[, "Treatment"]
weights <- c(rep(1, 60), rep(0, 10), rep(2, 14))
## first all observations
tableNominal(vars = vars, weights = weights, group = group, cap =
"Table of nominal variables.", lab = "tab: nominal")
?tableNominal()
vars
?table()
?tableContinuous()
data(CO2)
vars <- CO2[, 4:5]
group <- CO2[, "Treatment"]
weights <- c(rep(1, 60), rep(0, 10), rep(2, 14))
## display default statistics, provide neither group nor weights
tableContinuous(vars = vars, stats = c("n", "min", "mean", "median",
"max", "iqr", "na"), print.pval = "kruskal",
cap = "Table of continuous variables.", lab = "tab: descr stat")
tableContinuous(vars = list(CO2$conc, CO2$uptake, rnorm(1111), runif(2222)),
nams = c("conc", "uptake", "random1", "random2"), disp.cols =
c("n", "min", "median", "max", "iqr", "na"), cap = "Table of continuous variables.", lab =
"tab: descr stat")
data(CO2)
vars <- CO2[, 4:5]
group <- CO2[, "Treatment"]
weights <- c(rep(1, 60), rep(0, 10), rep(2, 14))
## display default statistics, provide neither group nor weights
tableContinuous(vars = vars, stats = c("n", "min", "mean", "median",
"max", "iqr", "na"), print.pval = "kruskal",
cap = "Table of continuous variables.", lab = "tab: descr stat")
tableContinuous(vars = vars, stats = c("n", "min", "mean", "median",
"max", "iqr", "na"))
install.packages("suRtex")
library(suRtex)
library(help=suRtex)
?suRtex()
suRtex(1:100)
suRtex(data.frame(1:100))
suRtex(data.frame(1:100),mean=T)
suRtex(data.frame(X=1:100),mean=T)
suRtex(data.frame(X=1:5),mean=T)
library(texreg)
install.packages("texreg")
library(texreg)
library(help=texreg)
texreg(1:100~1:100)
texreg(lm(1:100~1:100))
lm(1:100~1:100)
lm(1:100~10)
lm(rnorm(100)~rnorm(100))
texreg(lm(rnorm(100)~rnorm(100)))
?texreg(lm(rnorm(100)~rnorm(100)))
screenreg(lm(rnorm(100)~rnorm(100)))
#imun                  nmun      xmun      ymun             est   dist
#30  041401     Santiago de Huari -66.56368 -19.16432         Yocalla 72.986
#69  051202                Tomave -66.39428 -20.10161       Chaquilla 39.069
#124 051001    San Pablo de Lipez -67.23419 -22.17710 SanPablodeLipez 84.094
#133 020302            Caquiaviri -68.81794 -17.08523          Achiri 23.866
#153 020308   Santiago de Callapa -68.34709 -17.40089        Calacoto 33.414
#309 040401 Curahuara de Carangas -68.66717 -17.98866        Calacoto 78.809
rm(list=ls())
setwd("/Users/iMac6/Desktop/_ARU2018/20_Migracion/plataforma/")
library(foreign)
library(plotly)
library(RCurl)
sena<-read.dta("ts_raw.dta",convert.factors = F)
#Santiago de Huari
data<-sena[sena$estacion=="Yocalla",]
o<-order(data$year,data$month)
data<-data[o,]
data$date<-ts(1:dim(data)[1], freq=12,start = c(1981,1))
data
data[432:]
data[432,]
max(data$year)
sena
pt<- ggplot(data, aes(x = date, y = pt))+  geom_area(aes(color = "#00AFBB", alpha = 0.9))
tm<- ggplot(data, aes(x = date, y = tm))+  geom_area(aes(color = "#00AFBB", alpha = 0.9))
pt
tm
plotly(tm)
pt
plot_ly(x = ~date, y = ~pt, mode = 'lines', data=data)
plot_ly(x = ~date, y = ~tm, mode = 'lines', data=data)
plot_ly(x = ~date, y = ~tm, mode = 'lines', data=data)
plot_ly
?plot_ly
x <- list(
title = "Meses",
titlefont = f
)
f <- list(
family = "Courier New, monospace",
size = 18,
color = "#7f7f7f"
)
x <- list(
title = "Meses",
titlefont = f
)
y <- list(
title = "Temperatura Media Cº",
titlefont = f
)
plot_ly(x = ~date, y = ~tm, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = y)
f <- list(
family = "Courier New, monospace",
size = 18,
color = "#7f7f7f"
)
x <- list(
title = "Meses/Año",
titlefont = f
)
y <- list(
title = "Temperatura Media Cº",
titlefont = f
)
plot_ly(x = ~date, y = ~tm, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = y)
date
data$date
data
nchar(data$month)==1
data[nchar(data$month)==1,]
data[nchar(data$month)==1,"month"]
####formato de fecha
data$month<-as.character(data$month)
data[nchar(data$month)==1,"month"]<-paste0("0",data[nchar(data$month)==1,"month"])
data$date1<-paste0(data$year,"-",data$month)
plot_ly(x = ~date1, y = ~tm, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = y)
as.Date(data$date1)
as.Date(data$date1,"yyyy-mm")
plot_ly(x = ~date1, y = ~tm, mode = 'lines', data=data)
ts1<-ts(1:dim(data)[1], freq=12,start = c(1981,1))
ts1
ts1<-ts(data, freq=12,start = c(1981,1))
data$date<-ts(1:dim(data)[1], freq=12,start = c(1981,1))
label(data$date)
data$date <- as.Date(paste0(data$date1, '01'), format = '%Y%m%d')
data$date
library(plotly)
x <- read.table(
text = 'Month,Year,YearMonth,Population
1,2017,201701,100
1,2018,201801,300
2,2018,201802,310
3,2018,201803,320
4,2018,201804,330
2,2017,201702,200
3,2017,201703,300
4,2017,201704,400
5,2017,201705,500
6,2017,201706,600
7,2017,201707,700
8,2017,201708,800
9,2017,201709,900
10,2017,201710,1000
11,2017,201711,1100
12,2017,201712,1200',
header = TRUE, sep = ','
)
x$YearMonth <- as.Date(paste0(x$YearMonth, '01'), format = '%Y%m%d')
x$YearMonth
paste0(data$date1,"-", '01')
?as.Date()
data$date <- as.Date(paste0(data$date1,"-", '01'), format = '%Y-%m-%d')
data$date
plot_ly(x = ~date, y = ~tm, mode = 'lines', data=data)
plot_ly(x = ~date, y = ~tm, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = y)
x <- list(
title = "Meses/Año",
titlefont = f
)
plot_ly(x = ~date, y = ~tm, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = y)
sena<-read.dta("ts_raw.dta",convert.factors = F)
####formato de fecha
sena$month<-as.character(sena$month)
#imun                  nmun      xmun      ymun             est   dist
#30  041401     Santiago de Huari -66.56368 -19.16432         Yocalla 72.986
#69  051202                Tomave -66.39428 -20.10161       Chaquilla 39.069
#124 051001    San Pablo de Lipez -67.23419 -22.17710 SanPablodeLipez 84.094
#133 020302            Caquiaviri -68.81794 -17.08523          Achiri 23.866
#153 020308   Santiago de Callapa -68.34709 -17.40089        Calacoto 33.414
#309 040401 Curahuara de Carangas -68.66717 -17.98866        Calacoto 78.809
rm(list=ls())
setwd("/Users/iMac6/Desktop/_ARU2018/20_Migracion/plataforma/")
library(foreign)
library(plotly)
library(RCurl)
sena<-read.dta("ts_raw.dta",convert.factors = F)
####formato de fecha
sena$month<-as.character(sena$month)
sena[nchar(sena$month)==1,"month"]<-paste0("0",sena[nchar(sena$month)==1,"month"])
sena$date1<-paste0(sena$year,"-",sena$month)
sena$date <- as.Date(paste0(sena$date1,"-", '01'), format = '%Y-%m-%d')
#######################################
#Santiago de Huari
data<-sena[sena$estacion=="Yocalla",]
#parametros plot
f <- list(
family = "Courier New, monospace",
size = 18,
color = "#7f7f7f"
)
x <- list(
title = "Meses/Año",
titlefont = f
)
ytm <- list(
title = "Temperatura Media Cº",
titlefont = f
)
ypt <- list(
title = "Precipitación Total (mm)",
titlefont = f
)
#######################################
#Santiago de Huari
data<-sena[sena$estacion=="Yocalla",]
plot_ly(x = ~date, y = ~tm, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = ytm)
plot_ly(x = ~date, y = ~pt, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = ypt)
plot_ly(x = ~date, y = ~tm, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = ytm,text(paste0(data$date1)))
plot_ly(x = ~date, y = ~tm, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = ytm,text=(paste0(data$date1)))
plot_ly(x = ~date, y = ~tm, mode = 'lines', data=data,text=paste0(data$date1))%>%layout(xaxis = x, yaxis = ytm)
plot_ly(x = ~date, y = ~tm, mode = 'lines', data=data,text=paste0(data$date1,", ",data$tm,"Cº"))%>%layout(xaxis = x, yaxis = ytm)
plot_ly(x = ~date, y = ~tm, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = ytm)
plot_ly(x = ~date, y = ~pt, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = ypt)
p<-plot_ly(x = ~date, y = ~tm, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = ytm)
htmlwidgets::saveWidget(as.widget(p), "yocalla.html")
htmlwidgets::saveWidget(as_widget(p), "yocalla.html")
#######################################
setwd("/Users/iMac6/Desktop/_github_Aru/oim-aru/assets/img")
#######################################
setwd("/Users/iMac6/Desktop/_github_Aru/oim-aru/assets/img")
#Santiago de Huari
data<-sena[sena$estacion=="Yocalla",]
p<-plot_ly(x = ~date, y = ~tm, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = ytm)
htmlwidgets::saveWidget(as_widget(p), "yocallatm.html")
p<-plot_ly(x = ~date, y = ~pt, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = ypt)
htmlwidgets::saveWidget(as_widget(p), "yocallapt.html")
data
summary(data$year)
#Tomave
data<-sena[sena$estacion=="Chaquilla",]
p<-plot_ly(x = ~date, y = ~tm, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = ytm)
p
data
p<-plot_ly(x = ~date, y = ~tm, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = ytm)
p
p<-plot_ly(x = ~date, y = ~pt, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = ypt)
htmlwidgets::saveWidget(as_widget(p), "Chaquillapt.html")
p
p<-plot_ly(x = ~date, y = ~tm, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = ytm)
p
#Tomave
data<-sena[sena$estacion=="Chaquilla",]
head(data)
data$pt
data$ytm
data$tm
#Tomave
data<-sena[sena$estacion=="Chaquilla",]
p<-plot_ly(x = ~date, y = ~pt, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = ypt)
htmlwidgets::saveWidget(as_widget(p), "Chaquillapt.html")
#San pablo de lipez
data<-sena[sena$estacion=="SanPablodeLipez",]
p<-plot_ly(x = ~date, y = ~tm, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = ytm)
p
p<-plot_ly(x = ~date, y = ~pt, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = ypt)
p
htmlwidgets::saveWidget(as_widget(p), "splpt.html")
#caquiaviri
data<-sena[sena$estacion=="Achiri",]
p<-plot_ly(x = ~date, y = ~tm, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = ytm)
p
p<-plot_ly(x = ~date, y = ~pt, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = ypt)
p
p<-plot_ly(x = ~date, y = ~tm, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = ytm)
p
setwd("/Users/iMac6/Desktop/_github_Aru/oim-aru/assets/img")
#Santiago de Huari
data<-sena[sena$estacion=="Yocalla",]
p<-plot_ly(x = ~date, y = ~tm, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = ytm)
htmlwidgets::saveWidget(as_widget(p), "yocallatm.html")
p<-plot_ly(x = ~date, y = ~pt, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = ypt)
htmlwidgets::saveWidget(as_widget(p), "yocallapt.html")
#Tomave
data<-sena[sena$estacion=="Chaquilla",]
p<-plot_ly(x = ~date, y = ~pt, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = ypt)
htmlwidgets::saveWidget(as_widget(p), "Chaquillapt.html")
#San pablo de lipez
data<-sena[sena$estacion=="SanPablodeLipez",]
p<-plot_ly(x = ~date, y = ~tm, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = ytm)
htmlwidgets::saveWidget(as_widget(p), "spltm.html")
p<-plot_ly(x = ~date, y = ~pt, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = ypt)
htmlwidgets::saveWidget(as_widget(p), "splpt.html")
#caquiaviri
data<-sena[sena$estacion=="Achiri",]
p<-plot_ly(x = ~date, y = ~tm, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = ytm)
htmlwidgets::saveWidget(as_widget(p), "Achiritm.html")
p<-plot_ly(x = ~date, y = ~pt, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = ypt)
htmlwidgets::saveWidget(as_widget(p), "Achiript.html")
#santiago de callapa curahuara de carangas
data<-sena[sena$estacion=="Calacoto",]
p<-plot_ly(x = ~date, y = ~tm, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = ytm)
htmlwidgets::saveWidget(as_widget(p), "Calacototm.html")
p<-plot_ly(x = ~date, y = ~pt, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = ypt)
htmlwidgets::saveWidget(as_widget(p), "Calacotopt.html")
#Santiago de Huari
data<-sena[sena$estacion=="Yocalla",]
p<-plot_ly(x = ~date, y = ~tm, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = ytm,title ="Custom Hover Text")
p
p<-plot_ly(x = ~date, y = ~tm, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = ytm,title ="Evolución de la temperatura Media")
p
p<-plot_ly(x = ~date, y = ~tm, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = ytm,title ="Evolución de la temperatura Media 1981 - 2016. Estación: Yocalla")
p
p<-plot_ly(x = ~date, y = ~tm, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = ytm,title ="Evolución de la temperatura Media en Cº. Estación: Yocalla, 1981 - 2016")
p
p<-plot_ly(x = ~date, y = ~tm, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = ytm,title ="Evolución de la temperatura Media en Cº. Estación: Yocalla, Periodo: 1981 - 2016")
p
p<-plot_ly(x = ~date, y = ~tm, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = ytm,title ="Evolución de la temperatura Media en Cº. Estación: Yocalla")
p
#imun                  nmun      xmun      ymun             est   dist
#30  041401     Santiago de Huari -66.56368 -19.16432         Yocalla 72.986
#69  051202                Tomave -66.39428 -20.10161       Chaquilla 39.069
#124 051001    San Pablo de Lipez -67.23419 -22.17710 SanPablodeLipez 84.094
#133 020302            Caquiaviri -68.81794 -17.08523          Achiri 23.866
#153 020308   Santiago de Callapa -68.34709 -17.40089        Calacoto 33.414
#309 040401 Curahuara de Carangas -68.66717 -17.98866        Calacoto 78.809
rm(list=ls())
setwd("/Users/iMac6/Desktop/_ARU2018/20_Migracion/plataforma/")
library(foreign)
library(plotly)
library(RCurl)
sena<-read.dta("ts_raw.dta",convert.factors = F)
####formato de fecha
sena$month<-as.character(sena$month)
sena[nchar(sena$month)==1,"month"]<-paste0("0",sena[nchar(sena$month)==1,"month"])
sena$date1<-paste0(sena$year,"-",sena$month)
sena$date <- as.Date(paste0(sena$date1,"-", '01'), format = '%Y-%m-%d')
#parametros plot
f <- list(
family = "Courier New, monospace",
size = 18,
color = "#7f7f7f"
)
x <- list(
title = "Meses/Año",
titlefont = f
)
ytm <- list(
title = "Temperatura Media Cº",
titlefont = f
)
ypt <- list(
title = "Precipitación Total (mm)",
titlefont = f
)
#######################################
setwd("/Users/iMac6/Desktop/_github_Aru/oim-aru/assets/img")
#Santiago de Huari
data<-sena[sena$estacion=="Yocalla",]
p<-plot_ly(x = ~date, y = ~tm, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = ytm,title ="Evolución de la temperatura Media en Cº. Estación: Yocalla")
htmlwidgets::saveWidget(as_widget(p), "yocallatm.html")
p<-plot_ly(x = ~date, y = ~pt, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = ypt,title ="Evolución de la Precipitación Pluvial en mm. Estación: Yocalla")
htmlwidgets::saveWidget(as_widget(p), "yocallapt.html")
#Tomave
data<-sena[sena$estacion=="Chaquilla",]
p<-plot_ly(x = ~date, y = ~pt, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = ypt, title ="Evolución de la Precipitación Pluvial en mm. Estación: Chaquilla")
htmlwidgets::saveWidget(as_widget(p), "Chaquillapt.html")
#San pablo de lipez
data<-sena[sena$estacion=="SanPablodeLipez",]
p<-plot_ly(x = ~date, y = ~tm, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = ytm,title ="Evolución de la temperatura Media en Cº. Estación: San Pablo de Lipez")
htmlwidgets::saveWidget(as_widget(p), "spltm.html")
p<-plot_ly(x = ~date, y = ~pt, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = ypt, title ="Evolución de la Precipitación Pluvial en mm. Estación: San Pablo de Lipez")
htmlwidgets::saveWidget(as_widget(p), "splpt.html")
#caquiaviri
data<-sena[sena$estacion=="Achiri",]
p<-plot_ly(x = ~date, y = ~tm, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = ytm,title ="Evolución de la temperatura Media en Cº. Estación: Achiri")
htmlwidgets::saveWidget(as_widget(p), "Achiritm.html")
p<-plot_ly(x = ~date, y = ~pt, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = ypt, title ="Evolución de la Precipitación Pluvial en mm. Estación: Achiri")
htmlwidgets::saveWidget(as_widget(p), "Achiript.html")
#santiago de callapa curahuara de carangas
data<-sena[sena$estacion=="Calacoto",]
p<-plot_ly(x = ~date, y = ~tm, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = ytm,title ="Evolución de la temperatura Media en Cº. Estación: Calacoto")
htmlwidgets::saveWidget(as_widget(p), "Calacototm.html")
p<-plot_ly(x = ~date, y = ~pt, mode = 'lines', data=data)%>%layout(xaxis = x, yaxis = ypt, title ="Evolución de la Precipitación Pluvial en mm. Estación: Calacoto")
htmlwidgets::saveWidget(as_widget(p), "Calacotopt.html")
?plot_ly
p<-plot_ly(x = ~date, y = ~tm, mode = 'lines', data=data,fill = 'tozeroy')%>%layout(xaxis = x, yaxis = ytm,title ="Evolución de la temperatura Media en Cº. Estación: Achiri")
p
